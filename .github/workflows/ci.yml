name: CI
on: [push, pull_request]
jobs:
  build:
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: 3.8
          cache: pip
          cache-dependency-path: '**/requirements*.txt'
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: npm
          cache-dependency-path: '**/package-lock.json'
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6
          bundler-cache: true
      - run: pip install -r requirements.txt
      # Check requirements.txt contains production requirements.
      - run: ./manage.py --help
      - run: pip install -r requirements_dev.txt
      # - name: Run Vue tests
      #   working-directory: frontend
      #   run: |
      #     npm install
      #     npm run test:unit
      #     gem install coveralls-lcov
      #     coveralls-lcov -v -n coverage/lcov.info > coverage.json
      - name: Run Django tests
        env:
          PYTHONWARNINGS: error
          REDIS_URL: redis://localhost:${{ job.services.redis.ports[6379] }}/0
          CELERY_BACKEND: db+postgresql://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/postgres
          DB_PORT: ${{ job.services.postgres.ports[5432] }}
          MEDIA_ROOT: /tmp/
          FILE_UPLOAD_TEMP_DIR: /tmp/
        run: |
          ./manage.py migrate
          ./manage.py makemigrations --check --dry-run
          ./manage.py check --fail-level WARNING
          pytest -W error --cov core --cov spoonbill_web --no-migrations
      - env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: coveralls --service=github # --merge=frontend/coverage.json
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432/tcp
      redis:
        image: redis:latest
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379/tcp
