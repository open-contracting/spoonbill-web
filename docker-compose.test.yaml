x-shared: &shared
  env_file: .env
  restart: unless-stopped

x-django: &django
  <<: *shared
  image: app
  build:
    dockerfile: Dockerfile_django
  depends_on:
    - postgres
    - redis
  environment:
    - DJANGO_ENV=production
    - DATABASE_URL=postgresql://postgres:postgres@postgres/postgres
    - REDIS_URL=redis://redis:6379/0
  volumes:
    - temporary-data:/data/media

services:
  traefik:
    image: traefik:v2.4
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - 'traefik.enable=true'
    ports:
      - ${TRAEFIK_IP:-0.0.0.0}:80:80
      - ${TRAEFIK_IP:-0.0.0.0}:8888:8888
    command:
      - '--api'
      - '--api.insecure=true'
      - '--providers.docker=true'
      - '--providers.docker.exposedByDefault=false'
      - '--entrypoints.http=true'
      - '--entrypoints.http.address=:80'
      - '--log=true'
      - '--log.level=INFO'
  app:
    <<: *django
    command: sh -c "python manage.py migrate && daphne -b 0.0.0.0 -p 8000 spoonbill_web.asgi:application"
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.app.entrypoints=http'
      - 'traefik.http.routers.app.rule=PathPrefix(`/api`) || PathPrefix(`/ws`)'
  postgres:
    image: postgres:12
    volumes:
      - postgresql-data:/var/lib/postgresql/data
  redis:
    image: redis:latest
  celery_worker:
    <<: *django
    command: celery -A spoonbill_web worker -l INFO --concurrency=4
  celery_beat:
    <<: *django
    command: celery -A spoonbill_web beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
  static:
    image: static
    build:
      dockerfile: Dockerfile_static
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.site.entrypoints=http'
      - 'traefik.http.routers.site.rule=PathPrefix(`/`)'
    volumes:
      - temporary-data:/data/media

volumes:
  postgresql-data:
  temporary-data:
