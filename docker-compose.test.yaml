version: '3.7'

services:
  traefik:
    image: traefik:v2.4
    container_name: traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - main
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.dashboard.rule=PathPrefix(`/dashboard`)'
      - 'traefik.http.routers.dashboard.entrypoints=dashboard'
      - 'traefik.http.routers.dashboard.service=api@internal'
    ports:
      - ${TRAEFIK_IP:-0.0.0.0}:80:80
      - ${TRAEFIK_IP:-0.0.0.0}:8888:8888
    command:
      - '--api'
      - '--api.insecure=true'
      - '--providers.docker=true'
      - '--providers.docker.exposedByDefault=false'
      - '--entrypoints.http=true'
      - '--entrypoints.http.address=:80'
      - '--entrypoints.dashboard=true'
      - '--entrypoints.dashboard.address=:8888'
      - '--log=true'
      - '--log.level=INFO'
  app:
    build: .
    image: app
    pull_policy: if_not_present
    command: sh -c "python manage.py migrate && daphne -b 0.0.0.0 -p 8000 spoonbill_web.asgi:application"
    container_name: app
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.app.entrypoints=http'
      - 'traefik.http.routers.app.rule=PathPrefix(`/api`) || PathPrefix(`/ws`)'
    depends_on:
      - postgres
      - redis
      - traefik
    hostname: app
    env_file:
      - .env
    environment:
      - DJANGO_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres@postgres/postgres
      - REDIS_URL=redis://redis:6379/0
    networks:
      - main
    volumes:
      - temporary-data:/data/media
    restart: on-failure
  postgres:
    container_name: postgres
    hostname: postgres
    image: postgres:12
    env_file:
      - .env
    networks:
      - main
    restart: on-failure
    volumes:
      - postgresql-data:/var/lib/postgresql/data
  redis:
    container_name: redis
    hostname: redis
    image: redis:latest
    networks:
      - main
    restart: on-failure
  celery_worker:
    build: .
    image: app
    command: celery -A spoonbill_web worker -l INFO --concurrency=4
    container_name: celery_worker
    env_file:
      - .env
    environment:
      - DJANGO_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres@postgres/postgres
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - app
      - postgres
      - redis
    volumes:
      - temporary-data:/data/media
    hostname: celery_worker
    networks:
      - main
    restart: on-failure
  celery_beat:
    build: .
    image: app
    command: celery -A spoonbill_web beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
    container_name: celery_beat
    env_file:
      - .env
    environment:
      - DJANGO_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres@postgres/postgres
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - app
      - postgres
      - redis
    hostname: celery_beat
    networks:
      - main
    restart: on-failure
  front:
    build:
      context: ./frontend
      args:
        VUE_APP_API_URL: http://127.0.0.1/api/
        VUE_APP_WEBSOCKET_URL: ws://127.0.0.1/api/ws
    image: front
    container_name: front
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.site.entrypoints=http'
      - 'traefik.http.routers.site.rule=PathPrefix(`/`)'
    depends_on:
      - app
    hostname: front
    networks:
      - main
    restart: on-failure
    volumes:
      - temporary-data:/data/media

networks:
  main:

volumes:
  postgresql-data:
  temporary-data:
